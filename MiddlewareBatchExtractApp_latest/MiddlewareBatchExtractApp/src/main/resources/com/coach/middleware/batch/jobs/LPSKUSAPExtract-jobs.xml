<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<context:component-scan base-package="com.coach.middleware.batch" />
	
	<!-- <bean id="jobRepository"
	class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
	<property name="transactionManager" ref="transactionManager" />
    </bean> -->

	<!-- <util:properties id="lpSkuSapExtractProp"
		location="file:./target/properties/LPSKUSAP.properties" /> -->

		<bean id="LpSkuSapExtractDBItemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />

		<property name="sql">
			<value>
		 <![CDATA[
	            select dsap.uniqueId seqNo,dsap.style,dsap.Color,dsap.skuSize,dsap.styleDesc,dsap.colorDesc,dsap.requestType type,
				dsap.DropIrAlso,To_char(dsap.sshipDate,'mm/dd/yyyy hh:mi:ss AM') sshipDate,dsap.ProdHierar,dsap.divi,dsap.dept,dsap.skuClass,dsap.subClass,dsap.targetCost,dsap.finalCost,
				dsap.IrOnly,dsap.upcCode,dsap.venRefNo,dsap.exotic,To_char(dsap.setupCreateDate,'mm/dd/yyyy hh:mi:ss AM') setupCreateDate,dsap.retPrice,dsap.whPrice,dsap.jpp,dsap.jpy,dsap.j2,dsap.j3,
				dsap.HAWAIIWHL,dsap.kpp,dsap.HAWAIIFP,dsap.HAWAIIFS,dsap.cad,dsap.ipp,dsap.sizeScale,To_char(dsap.FSSTARTSHIPDATE,'mm/dd/yyyy') FSSTARTSHIPDATE,dsap.FSTICKETPRICE from (
				select *
				from DATAEXTRACTIONTOSAP dsapInner 
				where 
				dsapInner.WRITTENTOSAPFLAG is null
				or dsapInner.WRITTENTOSAPFLAG !='Y'
				and dsapInner.WRITTENTOSAPFLAG !='Yes'  order by dsapInner.SETUPCREATEDATE asc
				)dsap where rownum <=
	                ]]>
			</value>
		</property>
		<property name="rowMapper">
			<bean class="com.coach.middleware.batch.dao.RowMapper.LpSkuSapExtractRowMapper" />
		</property>

	</bean>



	<bean id="LpSkuSapExtractItemProcessor"
		class="com.coach.middleware.batch.itemProcessor.LpSkuSapExtractItemProcessor"/>
		
	<bean id="LpSkuSapExtractWriter"
		class="com.coach.middleware.batch.itemWriter.LpSkuSapExtractItemWriter">
		<property name="LpSkuSapExtractFileItemWriter" ref="LpSkuSapExtractFileItemWriter" />
	</bean>


	<bean id="TotoExtractItemReader"
		class="com.coach.middleware.batch.itemReader.TotoExtractItemReader"
		scope="step">
	</bean>


	<bean id="genLpSkuSAPRDY" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator" />
		</property>
		<property name="shouldDeleteIfExists" value="true" />
	</bean>

	<bean id="LpSkuSapExtractFileItemWriter" name="LpSkuSapExtractFileItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter">

		<property name="resource" value="" />
		<property name="shouldDeleteIfExists" value="true" />

		<property name="lineAggregator">

			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">

				<property name="delimiter" value="||" />

				<property name="fieldExtractor">

					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names"
						value="seqNo,style,color,skuSize,styleDesc,colorDesc,type,dropIrAlso,
						sshipDate,prodHierar,divi,dept,skuClass,subClass,targetCost,finalCost,
						irOnly,upcCode,venRefNo,exotic,setupCreateDate,retPrice,whPrice,jpp,jpy,
						j2,j3,hawaiiWhl,kpp,hawaiiFp,hawaiiFs,cad,ipp,sizeScale,fsStartShipDate,fsTicketPrice" />
					</bean>

				</property>


			</bean>
		</property>
	</bean>
	<bean id="batchJobFailed" class="com.coach.middleware.batch.itemWriter.BatchJobFailedListener" scope="step" />


	<!-- Actual Job -->


	<batch:job id="LpSkuSapExtract">
		<batch:step id="LpSkuSapProcessing">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="LpSkuSapExtractDBItemReader" writer="LpSkuSapExtractWriter"
					processor="LpSkuSapExtractItemProcessor" commit-interval="200">
					<batch:streams>
						<batch:stream ref="LpSkuSapExtractFileItemWriter" />
					</batch:streams>
				</batch:chunk>
			</batch:tasklet>
			<batch:next on="COMPLETED" to="Generate-rdy"/>
			<batch:next on="FAILED" to="failureStep"/>
		</batch:step>
		<batch:step id="Generate-rdy">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="TotoExtractItemReader" writer="genLpSkuSAPRDY"
					commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="failureStep" >
			<batch:tasklet ref="batchJobFailed" />
		</batch:step>
	</batch:job>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans> 











