<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context 
      	http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:component-scan base-package="com.coach.middleware.batch" />



	<bean id="LPPRICESExtractRowMapper"
		class="com.coach.middleware.batch.dao.RowMapper.LPPRICESExtractRowMapper"
		scope="step" />





	<bean id="LPPRICESDeltaExtractDBItemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="fetchSize" value="700" />
		<property name="sql"
			value="#{jobParameters['LPPRICESQuery']}" />
		<property name="rowMapper">
			<bean
				class="com.coach.middleware.batch.dao.RowMapper.LPPRICESExtractRowMapper" />
		</property>

	</bean>





	<bean id="LPPRICESExtractItemProcessor"
		class="com.coach.middleware.batch.itemProcessor.LPPRICESExtractItemProcessor">
		<property name="LPPRICESExtractDao" ref="LPPRICESExtractDao" />
	</bean>

	<bean id="LPPRICESExtractDao" class="com.coach.middleware.batch.dao.LPPRICESExtractDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="LPPRICESExtractWriter" name="DBItemWriter"
		class="com.coach.middleware.batch.itemWriter.LPPRICESExtractItemWriter">
		<property name="LPPRICESExtractDBItemWriter" ref="LPPRICESExtractDBItemWriter" />
	</bean>



	<bean id="LPPRICESExtractDBItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="assertUpdates" value="true" />
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="insert into LPPRICES(ESSSKU,CENTURY,PERIOD,RETAILPRICE,WHPRICE,STDCOST,JPY) 
			values (:esssku,:century,:fiscalPeriod,:retailPrice,:wholeSalePrice,:stdCost,:cjiPrice)">
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>

	</bean>


 		<bean id="LPPRICESExtractStagingItemReader"
	        class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
	        <property name="dataSource" ref="dataSource" />
	          <property name="fetchSize" value = "1500" />
	 	     <property name="sql" value="#{jobParameters['LppricesstagQuery']}"/>
	 	    <property name="rowMapper">
	            <bean class="com.coach.middleware.batch.dao.RowMapper.LPPRICESStagingExtractRowMapper" />
	        </property>
		</bean>
	  
	  
	  
	<bean id="LPPRICESStagingFileWriter"
		class="com.coach.middleware.batch.itemWriter.LPPRICESStagingFileWriter">
		<property name="LPPRICESExtractFileItemWriter" ref="LPPRICESExtractFileItemWriter" />
	</bean>
	  
		<bean id="LPPRICESExtractFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">    
	        <property name="resource" value="" />
	        <property name="shouldDeleteIfExists" value="true" />
	        <property name="lineAggregator">
	            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
	              <property name="delimiter" value=","/> 
	 			    <property name="fieldExtractor">
	                     <bean
	                        class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
	                       <property name="names" value="ESSSKU,CENTURY,PERIOD,RETAILPRICE,WHPRICE,JPY"/> 
	                    
	                    </bean>
	                </property>
	            </bean>
	        </property>
	    </bean>
	    
	    
	    

	<!-- <bean id="totoExtractDao" class="com.coach.middleware.batch.dao.TotoExtractDaoImpl"/> -->


	<!-- Actual Job -->


	<batch:job id="LPPRICESExtractJob">
		<batch:step id="LPPRICESDeltaExtractJobReadStep" next="LPPRICESDeltaExtractJobStaging">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="LPPRICESDeltaExtractDBItemReader"
					writer="LPPRICESExtractWriter" processor="LPPRICESExtractItemProcessor"
					commit-interval="700" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="LPPRICESDeltaExtractJobStaging">
            <batch:tasklet transaction-manager="transactionManager">
                 <batch:chunk reader="LPPRICESExtractStagingItemReader" writer="LPPRICESStagingFileWriter" commit-interval="1500" >
                 <batch:streams>
						<batch:stream ref="LPPRICESExtractFileItemWriter" />
					</batch:streams>
                 </batch:chunk>
            </batch:tasklet>
        </batch:step>
	</batch:job>





	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans> 











