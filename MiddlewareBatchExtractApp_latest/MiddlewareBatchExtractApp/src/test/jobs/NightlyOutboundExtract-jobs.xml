<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<context:component-scan base-package="com.coach.middleware.batch" />

	<!-- <bean id="jobRepository"
	class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
	<property name="transactionManager" ref="transactionManager" />
    </bean> -->
	
	<!-- <util:properties id="nightlyOutboundProps"
		location="classpath:com/coach/middleware/batch/config/properties/PRODMAST.properties" /> -->

	<bean id="ProdMastItemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="fetchSize" value="500"/>
		<property name="sql">
			<value>
		 <![CDATA[
	    
	    	select  p.styleNumber styleNum,p.abbrStyleName styleDesc,p.Introdate introdate,p.fsIntrodate fsIntrodate,
			p.department dept,p.styleClass styleClass,p.subClass subClass,sku.NAME skuName,sku.styleuniqueid,sku.uniqueId skuUniqueId,
			p.Gifting,p.productSegmentation,p.attitudinalSegments,p.deleteDate deleteDate,p.fsDeleteDate fsDeleteDate,
			sku.TotalCost skuTotalCost,
			p.TotalCost prodTotalCost,
			sku.originalTargetCost skuTargetCost,
			p.originalTargetCost prodTargetCost, 
		    p.originalretailprice prodRetailPrice, 
		    p.originalwholesaleprice prodWhPrice,
			sku.workingCost1 skuAvgWorkingCost1,
			p.AverageWorkingCost1 AvgWorkingCost1,
      		p.averagefinalStandardCost prodStdCost,
			sku.stdCost FinalStdCost,
			(select seasonname from seasongroupmaster where uniqueid=sku.introdate) skuIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=p.introdate) StyleIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=sku.deletedate) SkuDeleteYear,
			(select seasonname from seasongroupmaster where uniqueid=p.deletedate) StyleDeleteYear,
			(select seasonname from seasongroupmaster where uniqueid=sku.fsintrodate) skuFsIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=p.fsIntrodate) StyleFsIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=sku.fsdeletedate) SkuFsDeleteYear,
			(select seasonname from seasongroupmaster where uniqueid=p.fsdeletedate) StyleFsDeleteYear,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.introdate) skuIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.introdate) StyleIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.DeleteDate) skuDeleteDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.DeleteDate) StyleDeleteDate,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.fsintrodate) skuFsIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.fsintrodate) StyleFsIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.FSDeleteDate) skuFSDeleteDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.FSDeleteDate) StyleFSDeleteDate,
			(select colorFamily from ColorMaster where UniqueID=sku.ColorUniqueID) colorFamily,
			(select colorName from ColorMaster where UniqueID=sku.ColorUniqueID) colorName,
			sku.ColorUniqueID,p.Material,p.Silhouette,p.hardwareColor,p.gender,p.specialProduct,
			p.planExclusion,p.ChannelExclusive,p.signatureType,sku.Status,sku.UPCCode,sku.Exotic,
			p.SIZESCALEID sizeScale,p.pint,p.Soletype,p.toeType,p.toeShape,p.heelHeight1,sku.CASESIZE watchCaseSize,p.functionality,
			p.faceColor,sku.CASESHAPE caseShape,sku.lenstype lens,p.productIdentity,p.ESSENTIALS Collaboration,          
			p.Family attitude,p.Platform subCollection,p.MasterStyle StyleGroup,p.Composition collection,
			p.Marketing crossBody,p.SuperMasterStyle ParentStyle,p.productName merDesc,p.Licensed licensed,
			p.updated,sku.factorystoretypesku factoryType,p.AVERAGECURRENTCOST currentCost,sku.embellishment,
			p.handbagsize,sku.hardwareColor skuhardwarecolor,sku.material skuMaterial, sku.signaturetype skuSignaturetype 
			from productmaster p,
			skumaster sku
			where
			p.department is not null and p.department != ' ' and
			p.Department not in(select department from DEPARTMENTS_TO_SKIP_DOWNSTREAM where jobname='PRODMAST') and
			p.styleClass is not null and p.styleClass != ' ' and
			p.subClass is not null and p.subClass != ' ' and
			p.styleNumber is not null and p.styleNumber != ' ' and
			p.uniqueid=sku.styleuniqueid order by p.department,p.styleClass,p.subClass,p.styleNumber,sku.Name
	                 
	     ]]>
			</value>
		</property>
		<property name="rowMapper" ref="NightlyOutBoundRowMapper" />
			<!-- <bean class="com.coach.middleware.batch.dao.RowMapper.NightlyOutBoundRowMapper" />
		</property> -->

	</bean>


	<bean id="ProdMastItemReaderDelta"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="fetchSize" value="500"/>
		<property name="sql">
			<value>
		 <![CDATA[
	    
	    	select  p.styleNumber styleNum,p.abbrStyleName styleDesc,p.Introdate introdate,p.fsIntrodate fsIntrodate,
			p.department dept,p.styleClass styleClass,p.subClass subClass,sku.NAME skuName,sku.styleuniqueid,sku.uniqueId skuUniqueId,
			p.Gifting,p.productSegmentation,p.attitudinalSegments,p.deleteDate deleteDate,p.fsDeleteDate fsDeleteDate,
			sku.TotalCost skuTotalCost,
			p.TotalCost prodTotalCost,
			sku.originalTargetCost skuTargetCost,
			p.originalTargetCost prodTargetCost, 
		    p.originalretailprice prodRetailPrice, 
		    p.originalwholesaleprice prodWhPrice,
			sku.workingCost1 skuAvgWorkingCost1,
			p.AverageWorkingCost1 AvgWorkingCost1,
      		p.averagefinalStandardCost prodStdCost,
			sku.stdCost FinalStdCost,
			(select seasonname from seasongroupmaster where uniqueid=sku.introdate) skuIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=p.introdate) StyleIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=sku.deletedate) SkuDeleteYear,
			(select seasonname from seasongroupmaster where uniqueid=p.deletedate) StyleDeleteYear,
			(select seasonname from seasongroupmaster where uniqueid=sku.fsintrodate) skuFsIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=p.fsIntrodate) StyleFsIntroYear,
			(select seasonname from seasongroupmaster where uniqueid=sku.fsdeletedate) SkuFsDeleteYear,
			(select seasonname from seasongroupmaster where uniqueid=p.fsdeletedate) StyleFsDeleteYear,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.introdate) skuIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.introdate) StyleIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.DeleteDate) skuDeleteDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.DeleteDate) StyleDeleteDate,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.fsintrodate) skuFsIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.fsintrodate) StyleFsIntroDate,
			(select seasongroupname from seasongroupmaster where uniqueid=sku.FSDeleteDate) skuFSDeleteDate,
			(select seasongroupname from seasongroupmaster where uniqueid=p.FSDeleteDate) StyleFSDeleteDate,
			(select colorFamily from ColorMaster where UniqueID=sku.ColorUniqueID) colorFamily,
			(select colorName from ColorMaster where UniqueID=sku.ColorUniqueID) colorName,
			sku.ColorUniqueID,p.Material,p.Silhouette,p.hardwareColor,p.gender,p.specialProduct,
			p.planExclusion,p.ChannelExclusive,p.signatureType,sku.Status,sku.UPCCode,sku.Exotic,
			p.SIZESCALEID sizeScale,p.pint,p.Soletype,p.toeType,p.toeShape,p.heelHeight1,sku.CASESIZE watchCaseSize,p.functionality,
			p.faceColor,sku.CASESHAPE caseShape,sku.lenstype lens,p.productIdentity,p.ESSENTIALS Collaboration,          
			p.Family attitude,p.Platform subCollection,p.MasterStyle StyleGroup,p.Composition collection,
			p.Marketing crossBody,p.SuperMasterStyle ParentStyle,p.productName merDesc,p.Licensed licensed,
			p.updated,sku.factorystoretypesku factoryType,p.AVERAGECURRENTCOST currentCost,sku.embellishment,
			p.handbagsize,sku.hardwareColor skuhardwarecolor,sku.material skuMaterial, sku.signaturetype skuSignaturetype 
			from productmaster p,
			skumaster sku
			where
			p.department is not null and p.department != ' ' and
			p.Department not in(select department from DEPARTMENTS_TO_SKIP_DOWNSTREAM where jobname='PRODMAST') and
			p.styleClass is not null and p.styleClass != ' ' and
			p.subClass is not null and p.subClass != ' ' and
			p.styleNumber is not null and p.styleNumber != ' ' and
			p.stylenumber in (select stylenumber from DELTA_EXTRACT) and
			p.uniqueid=sku.styleuniqueid order by p.department,p.styleClass,p.subClass,p.styleNumber,sku.Name
	    	
	                 
	     ]]>
			</value>
		</property>
		<property name="rowMapper" ref="NightlyOutBoundRowMapper" />
			<!-- <bean
				class="com.coach.middleware.batch.dao.RowMapper.NightlyOutBoundRowMapper" />
		</property> -->

	</bean>


	<bean id="ProdMastItemProcessor"
		class="com.coach.middleware.batch.itemProcessor.ProdMastItemProcessor">
		<property name="NightlyOutBoundDAO" ref="NightlyOutBoundDAO" />
		<property name="NightlyOutBoundDTO" ref="NightlyOutBoundDTO" />
		<!-- <property name="nightlyOutboundProps" ref="nightlyOutboundProps" /> -->
		<property name="defaultDate" value="" />
		<property name="defaultIntroDate" value="" />
		<property name="sizedDepartments" value="" />
		<property name="stylePrefixes" value="" />
		<property name="ignoreStyleSuffix" value="" />
	</bean>

	<bean id="NightlyOutBoundDAO" class="com.coach.middleware.batch.dao.NightlyOutBoundDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="NightlyOutBoundDTO" class="com.coach.middleware.batch.dto.NightlyOutBoundDTO" />
	<bean id="NightlyOutBoundRowMapper" class="com.coach.middleware.batch.dao.RowMapper.NightlyOutBoundRowMapper" />
	<bean id="NightlyOutBoundVO" class="com.coach.middleware.batch.dao.VO.NightlyOutBoundVO" />



	<bean id="ProdMastItemWriter"
		class="com.coach.middleware.batch.itemWriter.ProdMastItemWriter">
		<property name="ProdMastFileItemWriter" ref="ProdMastFileItemWriter" />
	</bean>

	<bean id="ProdMastFileItemWriter" name="ProdMastFileItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter">

		<property name="resource" value="" />
		<property name="shouldDeleteIfExists" value="true" />
		<property name="lineAggregator">

			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean class="com.coach.middleware.batch.itemWriter.ProdMastItemExtractor" />
				</property>
			</bean>
		</property>
	</bean>
	<bean id="nightlyAfterChunkReadProcessListener"
		class="com.coach.middleware.batch.itemProcessor.NightlyAfterChunkReadProcessListener">
		<property name="ProdMastItemProcessor" ref="ProdMastItemProcessor" />
		<property name="NightlyOutBoundRowMapper" ref="NightlyOutBoundRowMapper" />
		<property name="NightlyOutBoundVO" ref="NightlyOutBoundVO" />
	</bean>



	<bean id="GenerateRdy" class="com.coach.middleware.batch.itemReader.GenerateRdy"
		scope="step">
	</bean>

	<bean id="genProdMastRDY" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator" />
		</property>
		<property name="shouldDeleteIfExists" value="true" />
	</bean>

	<!-- Actual Job -->


	<batch:job id="NightlyOutboundJobFull">
		<batch:step id="ProdMastExtractFullModeProcess" next="Generate-ProdMastRdy-Full">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="ProdMastItemReader" processor="ProdMastItemProcessor"
					writer="ProdMastItemWriter" commit-interval="1000">
					<batch:streams>
						<batch:stream ref="ProdMastFileItemWriter" />
					</batch:streams>
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="nightlyAfterChunkReadProcessListener" />
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
		<batch:step id="Generate-ProdMastRdy-Full">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="GenerateRdy" writer="genProdMastRDY"
					commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<batch:job id="NightlyOutboundJobDelta" restartable="true">
		<batch:step id="ProdMastExtractDeltaModeProcessing" next="Generate-ProdMastRdy-Delta">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="ProdMastItemReaderDelta" processor="ProdMastItemProcessor"
					writer="ProdMastItemWriter" commit-interval="1000">
					<batch:streams>
						<batch:stream ref="ProdMastFileItemWriter" />
					</batch:streams>
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="nightlyAfterChunkReadProcessListener" />
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
		<batch:step id="Generate-ProdMastRdy-Delta">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="GenerateRdy" writer="genProdMastRDY"
					commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans> 