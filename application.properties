oracle.net.wallet_location=/cweprd/apps/oracle/product/12.1.0/client_1/network/wallet
oracle.net.tns_admin=/cweprd/apps/oracle/product/12.1.0/client_1/network/admin
#inbound
app.datasource.inbound.url=jdbc:oracle:thin:@CIGNEX:1521/orcl
app.datasource.inbound.username=PMDB_INBOUND
app.datasource.inbound.password=PMDB_INBOUND
app.datasource.inbound.driverClassName=oracle.jdbc.OracleDriver
#for maximum performance and responsiveness to spike demands, we recommend not setting this value and instead allowing HikariCP to act as a fixed size connection pool. Default: same as maximumPoolSize
#app.datasource.inbound.minimumIdle=2
#This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections. Basically this value will determine the maximum number of actual connections to the database backend. A reasonable value for this is best determined by your execution environment. When the pool reaches this size, and no idle connections are available, calls to getConnection() will block for up to connectionTimeout milliseconds before timing out. Please read about pool sizing. Default: 10
app.datasource.inbound.configuration.maximumPoolSize=20
#This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when minimumIdle is defined to be less than maximumPoolSize. Idle connections will not be retired once the pool reaches minimumIdle connections. Whether a connection is retired as idle or not is subject to a maximum variation of +30 seconds, and average variation of +15 seconds. A connection will never be retired as idle before this timeout. A value of 0 means that idle connections are never removed from the pool. The minimum allowed value is 10000ms (10 seconds). Default: 600000 (10 minutes)
app.datasource.inbound.configuration.idleTimeout=90000
#This property controls the maximum number of milliseconds that a client (that's you) will wait for a connection from the pool. If this time is exceeded without a connection becoming available, a SQLException will be thrown. Lowest acceptable connection timeout is 250 ms. Default: 30000 (30 seconds)
app.datasource.inbound.configuration.connectionTimeout=30000
#This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak. A value of 0 means leak detection is disabled. Lowest acceptable value for enabling leak detection is 2000 (2 seconds). Default: 0
app.datasource.inbound.configuration.leakDetectionThreshold=15000
app.datasource.inbound.configuration.maxLifetime=0

#outbound
app.datasource.outbound.url=jdbc:oracle:thin:@CIGNEX:1521/orcl
app.datasource.outbound.username=PMDB_OUTBOUND
app.datasource.outbound.password=PMDB_OUTBOUND
app.datasource.outbound.driverClassName=oracle.jdbc.OracleDriver
#for maximum performance and responsiveness to spike demands, we recommend not setting this value and instead allowing HikariCP to act as a fixed size connection pool. Default: same as maximumPoolSize
#app.datasource.inbound.minimumIdle=2
#This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections. Basically this value will determine the maximum number of actual connections to the database backend. A reasonable value for this is best determined by your execution environment. When the pool reaches this size, and no idle connections are available, calls to getConnection() will block for up to connectionTimeout milliseconds before timing out. Please read about pool sizing. Default: 10
app.datasource.outbound.configuration.maximumPoolSize=20
#This property controls the maximum amount of time that a connection is allowed to sit idle in the pool. This setting only applies when minimumIdle is defined to be less than maximumPoolSize. Idle connections will not be retired once the pool reaches minimumIdle connections. Whether a connection is retired as idle or not is subject to a maximum variation of +30 seconds, and average variation of +15 seconds. A connection will never be retired as idle before this timeout. A value of 0 means that idle connections are never removed from the pool. The minimum allowed value is 10000ms (10 seconds). Default: 600000 (10 minutes)
app.datasource.outbound.configuration.idleTimeout=90000
#This property controls the maximum number of milliseconds that a client (that's you) will wait for a connection from the pool. If this time is exceeded without a connection becoming available, a SQLException will be thrown. Lowest acceptable connection timeout is 250 ms. Default: 30000 (30 seconds)
app.datasource.outbound.configuration.connectionTimeout=30000
#This property controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak. A value of 0 means leak detection is disabled. Lowest acceptable value for enabling leak detection is 2000 (2 seconds). Default: 0
app.datasource.outbound.configuration.leakDetectionThreshold=15000
app.datasource.outbound.configuration.maxLifetime=0

spring.jpa.hibernate.ddl-auto=false
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=oracle
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

gsm.file.path=D:/Images
thumbnail.image.path=D:/Images
nrf.file.path:D:/IMG
nrf.archivefile.path=D:/Images
pmdb.nrf.scheduler.job.enable=true
pmdb.nrf.file.name=ProductColorNRF


logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=TRACE
pmdb.scheduler.jobs.enable=true

#scheduler time //15minutes*60*1000 = millisecond

gsm.file.scheduler.time=900000
#scheduler time - 12 hours//1000*60*60*12hour = milisecond
#staging.table.scheduler.time=43200000
staging.table.scheduler.time=60000


#nrf file path
#nrf archive file path
#nrf job status
#nrf file name start with ProductColorNRF
#nrf time
nrf.scheduler.time=60000


#scheduler days // days = more than old record will be deleted
db.cleanup.days=180
#scheduler time // 7D*24h*60m*60s*1000 = millisecond
db.cleanup.scheduler.time=604800000


rpas.filename=PRODMAST
#rpas.fileFormat=yyyyMMdd
rpas.fileFormat=
rpas.fileExtension=
rpas.filepath=D:\\prodmast
rpas.delimeter=|
rdy.fileExtension=.rdy
rdy.filename=PRODMAST

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


